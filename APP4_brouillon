import java.util.*;
//----------------------------------------------------------------------------------------------------------------------


class Etudiant{
	private String Nom, Prenom, Type;
	private double Moyenne;
	
	public Etudiant(String nom, String prenom, String type, double moyenne) {
		this.Nom = nom;
		this.Prenom = prenom;
		this.Moyenne = moyenne;
		this.Type = type;
	}
	
	public void AfficherEtudiant(int key) {
		System.out.println("Etudiant : " + Nom + " " + Prenom);
		System.out.println("Annee : " + Type);
		System.out.println("Moyenne : " + Moyenne);
	}
	
	public static void listEtudiant() {
        System.out.println("Liste des etudiants : ");
        for (Integer key : teste.Etudiants.keySet()) {
            System.out.println("numero etudiant : " + key + ". Nom : " + teste.Etudiants.get(key).getNom() + ". Prenom : " + teste.Etudiants.get(key).getPrenom() + "Annee : " + teste.Etudiants.get(key).getType() +". Moyenne : " + teste.Etudiants.get(key).getMoyenne());
        }
	}
	
	String getPrenom(){return Prenom;}
	String getType() {return Type;}
    String getNom(){return Nom;}
    double getMoyenne(){return Moyenne;}

}
//----------------------------------------------------------------------------------------------------------------------


class EtudiantDerniere extends Etudiant{
	private double NoteProjet;
	
    public EtudiantDerniere(String nom, String prenom, String type, double noteProjet, double moyenne) {
        super(nom, prenom, type, moyenne);
        this.NoteProjet = noteProjet;
    }
    public static void MoyenneEtudiant(int key){
        double sum = 0;
        int size = 0;
        for (int i; i < 8; i = i++) {
            size++; 
	        sum += (teste.Matieres.get(key).getOralHistoire(key) + getOralMath(key) + getOralLangue(key)) * 0.4 + (getEcritHistoire(key) + getEcritMath(key) + getEcritLangue(key)) * 0.6;
        } 
    	System.out.println("\nSalaire moyen des vendeurs : " + sum / size);

    }
}


class EtudiantAutre extends Etudiant{
    public EtudiantAutre(String nom, String prenom, String type, double moyenne) {
    	super(nom, prenom, type, moyenne);
    }
}

class Matiere_ {
    private double OralHistoire, OralMath, OralLangue, EcritHistoire, EcritMath, EcritLangue;

    public Matiere_(double OralHistoire, double OralMath, double OralLangue, double EcritHistoire, double EcritMath, double EcritLangue){
        this.OralHistoire  = OralHistoire;
        this.OralMath = OralMath;
        this.OralLangue = OralLangue;
        this.EcritHistoire  = EcritHistoire;
        this.EcritMath = EcritMath;
        this.EcritLangue = EcritLangue;
    }
    
	double getOralHistoire(){return OralHistoire;}
	double getOralMath() {return OralMath;}
	double getOralLangue(){return OralLangue;}
	double getEcritHistoire() {return EcritHistoire;}
	double getEcritMath(){return EcritMath;}
	double getEcritLangue() {return EcritLangue;}
}

static class teste {
    public static HashMap<Integer, Etudiant> Etudiants = new HashMap<>();
    public static HashMap<Integer, Matiere_> Matieres = new HashMap<>();

    public static Scanner sc = new Scanner(System.in);
    public static int key = 0;

    public static void main(String[] args) {
        String menu = "------------------------------------------------\n" +
                "Afficher le menu          ]------------------[ 1\n" +
                "Ajouter un etudiant       ]------------------[ 2\n" +
                "Afficher un etudiant      ]------------------[ 3\n" +
                "Calculer la moyenne       ]------------------[ 4\n" +
                "Verifier l'admission      ]------------------[ 5\n" +
                "Supprimer un etudiant     ]------------------[ 6\n" +
                "Statistique d'admission   ]------------------[ 7\n" +
                "Quitter le programme      ]------------------[ 8\n" +
                "------------------------------------------------\n";
        System.out.print(menu);
        System.out.print("\nEntrez l'option souhaitee apres ce symbole ");
        while (true) {
            try {
                System.out.print("> : ");
                switch (Integer.parseInt(sc.next())) {
	                case 1 :
	                    System.out.print(menu);
	                    break;
                    case 2 :
                        nouveauEtudiant();
                        break;
                    case 3 :
                    	System.out.print("Entrez le numero de l'étudiant : ");
                        key = sc.nextInt();
                        Etudiants.get(key).AfficherEtudiant(key);
                        break;
                    case 4 :
                    	System.out.print("Entrez le numero de l'étudiant : ");
                        break;
                    case 7 :
                        System.out.println("Vous avez quitte le programme.");
                        sc.close();
                        System.exit(0);
                        break;
                    default : System.out.println("Option incorrecte!");
                }
            } catch (IllegalStateException | NumberFormatException e) {
                System.out.println("Erreur. Veuillez recommencer!\n");
            } catch (InputMismatchException | NullPointerException e) {
                System.out.print("Aucun employe ne correspond a ce numero.\n");
            }
        }
    }


    public static void nouveauEtudiant() {
        key++;
        System.out.print("\n--------------- NOUVEAU ETUDIANT --------------\n");
        System.out.print("Entrez le nom : ");
        String nom = sc.next();
        System.out.print("Entrez le prenom : ");
        String prenom = sc.next();

		System.out.print("\nSi l'etudiant est en derniere annee entrez 0, sinon, tapez 1 : ");
	        int Annee = Integer.parseInt(sc.next());
	        if (Annee == 0){
	            EtudiantAutre etudiant = new EtudiantAutre(nom, prenom, "Premiere ou deuxieme annee", 0);
	            Etudiants.put(key, etudiant);
	        }
	        else {
	        	System.out.print("\nEntrez la note de l'étudiant : ");
	        	double noteProjet = Double.parseDouble(sc.next());
	            EtudiantDerniere etudiant = new EtudiantDerniere(nom, prenom, "Derniere annee", noteProjet, 0);
	            Etudiants.put(key, etudiant);
	        }
  
        ArrayList <String> listeMatieres = new ArrayList<>();
        Collections.addAll(listeMatieres, "Histoire-Geo", "Mathematiques", "Langues");

        for (String nomMatiere: listeMatieres){
            System.out.print("La note ecrite obtenue en Histoire : ");
            double EcritHistoire = Double.parseDouble(sc.next());
            System.out.print("La note orale obtenue en Histoire : ");
            double OralHistoire = Double.parseDouble(sc.next());
            
            System.out.print("La note ecrite obtenue en Mathematiques : ");
            double EcritMath = Double.parseDouble(sc.next());
            System.out.print("La note orale obtenue en Mathematiques : ");
            double OralMath = Double.parseDouble(sc.next());
            
            System.out.print("La note ecrite obtenue en Langues : ");
            double EcritLangue = Double.parseDouble(sc.next());
            System.out.print("La note orale obtenue en Langues : ");
            double OralLangue = Double.parseDouble(sc.next());
            
            Matiere_ matiere = new Matiere_(OralHistoire, OralMath, OralLangue, EcritHistoire, EcritMath, EcritLangue);
            Matieres.put(key, matiere);
        }

        
        System.out.println("\nEtudiant est bien ajoute dans la liste.\nLe numero d'etudiant : " + key);
        System.out.print("------------------------------------------------\n");
    }
    
}
