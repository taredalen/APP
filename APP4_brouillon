import java.util.*;
//----------------------------------------------------------------------------------------------------------------------
class Etudiant {
    public String nom, prenom;
    public double moyenne;

    public Etudiant(String nom, String prenom, double moyenne) {
        this.nom = nom;
        this.prenom = prenom;
        this.moyenne = moyenne;
    }

    public void afficherEtudiant() {
        System.out.println("⎥ NOM        ⎥ " + nom + "\n⎥ PRENOM     ⎥ " + prenom + "\n⎥ MOYENNE    ⎥ " + moyenne);
    }

    public double moyenneEtudiant(int key) {
        double moyenneOrale = Matiere.moyenneOrale(key);
        double moyenneEcrite = Matiere.moyenneEcrite(key);
        return moyenne = (moyenneOrale + moyenneEcrite) / 2;
    }

    public static void supprimerEtudiant(Etudiant etudiant, int key) {
        Scanner sc = new Scanner(System.in);
        System.out.print("\nEntrez 1 pour supprimer " + etudiant.getNom() + " " + etudiant.getPrenom() + "\nEntrez 0 pour annuler la suppression : ");
        int reponse = Integer.parseInt(sc.next());
        if (reponse == 1) {
            APP4.hashMapEtudiants.remove(key);
            Matiere.hashMapMatieres.remove(key);
            System.out.println("Etudiant supprime de la liste.");
            return;
        } if (reponse == 0) System.out.println("Suppression annulee.");
    }

    public static void listEtudiants() {
        for (Integer key : APP4.hashMapEtudiants.keySet())
            System.out.println("N° : " + key + "⎥  Nom : " + APP4.hashMapEtudiants.get(key).getNom() + "⎥  Prenom : " + APP4.hashMapEtudiants.get(key).getPrenom());
    }

    public static void listeValidationAnnee(){
        int nombreEtudiants  = 0 ;
        for (Integer key : APP4.hashMapEtudiants.keySet())
            if (APP4.hashMapEtudiants.get(key).getMoyenne() >= 10) nombreEtudiants++;
        System.out.println("Nombre d'etudiants qui valident l'annee    : " + nombreEtudiants);
        System.out.println("Nombre de ceux qui ne valident pas l'annee : " + (APP4.hashMapEtudiants.size() - nombreEtudiants));
    }
    
    public String getNom(){ return nom; }
    public String getPrenom(){ return prenom; }
    public double getMoyenne(){ return moyenne; }

    public void setNom(String nom){ this.nom = nom; }
    public void setPrenom(String prenom){ this.prenom = prenom; }

}
//----------------------------------------------------------------------------------------------------------------------
class EtudiantDerniere extends Etudiant {
    private double noteProjet;

    public EtudiantDerniere(String nom, String prenom, double moyenne, double noteProjet) {
        super(nom, prenom, moyenne);
        this.noteProjet = noteProjet;
    }
    @Override
    public void afficherEtudiant() {
        super.afficherEtudiant();
        System.out.println("⎥ PROJET     ⎥ " + noteProjet);
    }
    @Override
    public double moyenneEtudiant(int key) {
        return moyenne = (super.moyenneEtudiant(key) * 2 + noteProjet) / 3;
    }
}
//---------------------------------------------------------------------------------------------------------------------
class Matiere {
    public static String[] listeMatieres = {"Mathematiques", "Physique"};
    public static HashMap<Integer, ArrayList<Matiere>> hashMapMatieres = new HashMap<>();

    public double noteOrale, notEcrite;
    public String nomMatiere;

    public Matiere(double notEcrite, double noteOrale, String nomMatiere) {
        this.nomMatiere = nomMatiere;
        this.notEcrite = notEcrite;
        this.noteOrale = noteOrale;
    }

    public static void listeMatieres(int key) {
        while(true){
            try{
                double noteOrale, notEcrite ;
                Scanner sc = new Scanner(System.in);
                for (String nomMatiere : listeMatieres) {
                    System.out.print("La NE obtenue en " + nomMatiere + " : ");
                    while ((notEcrite = sc.nextDouble()) < 0 || notEcrite > 20) {
                        System.out.print("La NE obtenue en " + nomMatiere + " : ");
                    }
                    System.out.print("La NO obtenue en " + nomMatiere + " : ");
                    while ((noteOrale = sc.nextDouble()) < 0 || noteOrale > 20) {
                        System.out.print("La NO obtenue en " + nomMatiere + " : ");
                    }
                    Matiere matiere = new Matiere(notEcrite, noteOrale, nomMatiere);
                    hashMapMatieres.computeIfAbsent(key, k -> new ArrayList<>()).add(matiere);
                }
                break;
            } catch (InputMismatchException e){ System.out.println("Note doit correspondre a un chiffre!Recommencez!"); }
        }
    }

    public static double moyenneOrale(int key) {
        double sum = 0;
        for (Matiere m : hashMapMatieres.get(key)) {
            sum += m.getNoteOrale() * 0.4;
        } return sum / (listeMatieres.length * 0.4);
    }
    public static double moyenneEcrite(int key) {
        double sum = 0;
        for (Matiere m : hashMapMatieres.get(key)) {
            sum += m.getNotEcrite() * 0.6;
        } return sum / (listeMatieres.length * 0.6);
    }
    public static void afficherMatiere(int key) {
        for (Matiere m : hashMapMatieres.get(key))
            System.out.println("⎥ " + m.getNomMatiere() + " : NE = " + m.getNotEcrite() + " , NO = " + m.getNoteOrale());
    }

    public String getNomMatiere() { return nomMatiere; }
    public double getNotEcrite() { return notEcrite; }
    public double getNoteOrale() { return noteOrale; }

    public void setNotEcrite(double notEcrite) { this.notEcrite = notEcrite; }
    public void setNoteOrale(double noteOrale) { this.noteOrale = noteOrale; }

}
//----------------------------------------------------------------------------------------------------------------------
public class APP4 {
    public static HashMap<Integer, Etudiant> hashMapEtudiants = new HashMap<>();

    public static Scanner sc = new Scanner(System.in);
    private static int index, key = 0;

    public static void main(String[] args) {
        String menu =
                    "-----------------------------------------------  " +
                    "\n0 ⎢MENU ⎢   ADMINISTRATION SCOLAIRE  ⎥ EXIT ⎥ 9  " +
                    "\n-----------------------------------------------  " +
                    "\n1 ⎢ AJOUTER ETUDIANT   ⎢⎥ STAT D'ADMISSION  ⎥ 8  " +
                    "\n2 ⎢ AFFICHER ETUDIANT  ⎢⎥ LISTE D'ETUDIANTS ⎥ 7  " +
                    "\n3 ⎢ MODIFIER ETUDIANT  ⎢⎥ ADMISSION ETUDIANT⎥ 6  " +
                    "\n4 ⎢ SUPPRIMER ETUDIANT ⎢⎥ MOYENNE ETUDIANT  ⎥ 5  " +
                    "\n-----------------------------------------------\n" ;
        System.out.print(menu);
        System.out.print("Entrez l'option souhaitee apres ce symbole : ");
        while (true) {
            try {
                System.out.print("➤ ");
                switch (Integer.parseInt(sc.next())) {
                    case 0:
                        System.out.print(menu);
                        break;
                    case 1:
                        System.out.print("\n--------------- NOUVEAU ETUDIANT --------------\n");
                        nouveauEtudiant();
                        System.out.println("--------- ETUDIANT ENREGISTRE SOUS N°" + key + " --------\n");
                        break;
                    case 2:
                        System.out.print("Entrez le numero d'etudiant : ");
                        key = sc.nextInt();
                        System.out.println("-------------- AFFICHER ETUDIANT --------------");
                        hashMapEtudiants.get(key).moyenneEtudiant(key);
                        hashMapEtudiants.get(key).afficherEtudiant();
                        System.out.println("-----------------------------------------------");
                        Matiere.afficherMatiere(key);
                        System.out.println("-----------------------------------------------\n");
                        break;
                    case 3:
                        System.out.print("Entrez le numero d'etudiant : ");
                        key = sc.nextInt();
                        modifierEtudiant(key);
                        break;
                    case 4:
                        System.out.println("\n------------ SUPPRESSION ETUDIANT -------------");
                        System.out.print("Entrez le numero d'etudiant : ");
                        key = sc.nextInt();
                        Etudiant etudiant = APP4.hashMapEtudiants.get(key);
                        Etudiant.supprimerEtudiant(etudiant, key);
                        System.out.println("-----------------------------------------------\n");
                        break;
                    case 5:
                        System.out.println("-------------- MOYENNE ETUDIANT ---------------");
                        System.out.print("Entrez le numero d'etudiant : ");
                        key = sc.nextInt();
                        System.out.println("Moyenne d'etudiant : " + hashMapEtudiants.get(key).moyenneEtudiant(key));
                        System.out.println("-----------------------------------------------\n");
                        break;
                    case 6:
                        System.out.println("---------------- ADMISSION/NON ----------------");
                        double moyenne = hashMapEtudiants.get(key).moyenneEtudiant(key);
                        if(moyenne >= 10) System.out.println("Etudient selectionne est admis.");
                        else System.out.println("Etudient selectionne n'est pas admis.");
                        System.out.println("-----------------------------------------------\n");
                        break;
                    case 7:
                        System.out.println("--------------- LISTE ETUDIANTS ---------------");
                        Etudiant.listEtudiants();
                        System.out.println("-----------------------------------------------\n");
                        break;
                    case 8:
                        System.out.println("------------ STATISTIQUE GENERALE -------------");
                        Etudiant.listeValidationAnnee();
                        System.out.println("-----------------------------------------------\n");
                        break;
                    case 9:
                        System.out.println("Vous avez quitte le programme.");
                        sc.close();
                        System.exit(0);
                        break;
                    default:
                        System.out.println("Option incorrecte!");
                        break;
                }
            } catch ( Exception e) {
                System.out.println("Erreur. Veuillez recommencer!\n");
            }
        }
    }

    public static void nouveauEtudiant() {
        key++;
        System.out.print("Entrez le nom : ");
        String nom = sc.next();
        System.out.print("Entrez le prenom : ");
        String prenom = sc.next();

        Matiere.listeMatieres(key);

        do {
            System.out.print("\nEntrez 1 l'etudiant est en derniere annee.\nSinon entrez 0 : ");
            String reponse = sc.next();
            if (reponse.equals("0")) {
                Etudiant etudiant = new Etudiant(nom, prenom, 0);
                hashMapEtudiants.put(key, etudiant);
                break;
            } if (reponse.equals("1")) { 
                double noteProjet;
                System.out.print("Entrez la note projet obtenue : ");
                while ((noteProjet = sc.nextDouble()) < 0 || noteProjet > 20) {
                    System.out.print("Entrez la note projet obtenue : ");
                }
                EtudiantDerniere etudiant = new EtudiantDerniere(nom, prenom, 0, noteProjet);
                hashMapEtudiants.put(key, etudiant);
                break;
            }
        } while (true) ;
    }

    public static void modifierEtudiant(int key){
        System.out.print("------------- MODIFICATION ETUDIANT -----------");
        System.out.print("\n1 ⎢ MODIFIER LE NOM    ⎢⎥ MODIFIER NOTE: NO ⎥ 4" +
                         "\n2 ⎢ MODIFIER LE PRENOM ⎢⎥ MODIFIER NOTE: NE ⎥ 3" +
                         "\n0 ⎢ QUITTER ET ENREGISTRER LES MODIFICATIONS⎥ 0\n" );
        boolean option = true;
        while (option) {
            System.out.print("Entrez l'option souhaitee ➤ ");
            switch (Integer.parseInt(sc.next())) {
                case 1:
                    System.out.print("Entrez le nom : ");
                    hashMapEtudiants.get(key).setNom(sc.next());
                    break;
                case 2:
                    System.out.print("Entrez le prenom : ");
                    hashMapEtudiants.get(key).setPrenom(sc.next());
                    break;
                case 3:
                    index = choixMatiere();
                    System.out.print("Entrez la note ecrite : ");
                    Matiere.hashMapMatieres.get(key).get(index).setNotEcrite(sc.nextDouble());
                case 4:
                    index = choixMatiere();
                    System.out.print("Entrez la note orale : ");
                    Matiere.hashMapMatieres.get(key).get(index).setNoteOrale(sc.nextDouble());
                    break;
                case 0 :
                    System.out.print("---------- MODIFICATIONS ENREGISTREES ---------\n");
                    option = false;
                    break;
                default : System.out.println("Option incorrecte!");
            }
        }
    }
    public static int choixMatiere(){
        for (String nomMatiere : Matiere.listeMatieres)
            System.out.println(nomMatiere + " - " + Arrays.asList(Matiere.listeMatieres).indexOf(nomMatiere));
        System.out.println("Entrez le numero de matiere a modifier : ");
        int index = sc.nextInt();
        return index;
    }
}
